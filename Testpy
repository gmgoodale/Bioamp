def FFTFromDEQ(timeDEQs, numChannels, samplingRate):
      # Convert to a numpy array and take the fft for each channel
      chFrequencies = []
      for DEQ in timeDEQs:
          timeArray = numpy.asarray(DEQ)[:,1]
          chFrequencies.append(abs(fft(timeArray)))

      # Generate the X axis values which are the discrete frequency values
      N = len(chFrequencies[0])
      n = numpy.arange(N)
      T = N/samplingRate
      freqValues = n/T

      freqGraphs = []
      # Generate a list of tuples from the X and Y values for graphing
      for ch in chFrequencies:
          freqGraph = []
          for x, y in zip(freqValues, chFrequencies):
              freqGraph.append((x,y))

          freqGraphs.append(freqGraph)

      return freqGraphs
